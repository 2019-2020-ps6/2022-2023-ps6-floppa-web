{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/quiz.service\";\nimport * as i3 from \"@angular/common\";\nfunction QuestionFormComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"label\");\n    i0.ɵɵtext(3, \" Answer \");\n    i0.ɵɵelement(4, \"input\", 9)(5, \"br\");\n    i0.ɵɵtext(6, \" Correct \");\n    i0.ɵɵelement(7, \"input\", 10);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControlName\", \"value\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControlName\", \"isCorrect\");\n  }\n}\nexport let QuestionFormComponent = /*#__PURE__*/(() => {\n  class QuestionFormComponent {\n    constructor(formBuilder, quizService) {\n      this.formBuilder = formBuilder;\n      this.quizService = quizService;\n      // Form creation\n      this.initializeQuestionForm();\n    }\n    initializeQuestionForm() {\n      this.questionForm = this.formBuilder.group({\n        label: ['', Validators.required],\n        answers: this.formBuilder.array([])\n      });\n    }\n    ngOnInit() {}\n    get answers() {\n      return this.questionForm.get('answers');\n    }\n    createAnswer() {\n      return this.formBuilder.group({\n        value: '',\n        isCorrect: false\n      });\n    }\n    addAnswer() {\n      this.answers.push(this.createAnswer());\n    }\n    addQuestion() {\n      if (this.questionForm.valid) {\n        const question = this.questionForm.getRawValue();\n        this.quizService.addQuestion(this.quiz, question);\n        this.initializeQuestionForm();\n      }\n    }\n  }\n  QuestionFormComponent.ɵfac = function QuestionFormComponent_Factory(t) {\n    return new (t || QuestionFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.QuizService));\n  };\n  QuestionFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuestionFormComponent,\n    selectors: [[\"app-question-form\"]],\n    inputs: {\n      quiz: \"quiz\"\n    },\n    decls: 15,\n    vars: 3,\n    consts: [[1, \"card\"], [1, \"quiz-form\", 3, \"formGroup\"], [\"for\", \"label\"], [\"type\", \"text\", \"id\", \"label\", 1, \"input-custom\", 3, \"formControlName\"], [1, \"button-card\", 3, \"click\"], [\"formArrayName\", \"answers\", 1, \"answer\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"button-card\", 3, \"click\"], [1, \"answer-form\", 3, \"formGroupName\"], [\"type\", \"text\", 3, \"formControlName\"], [\"type\", \"checkbox\", 3, \"formControlName\"]],\n    template: function QuestionFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Create a new question\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \" Title \");\n        i0.ɵɵelement(6, \"br\")(7, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function QuestionFormComponent_Template_button_click_9_listener() {\n          return ctx.addAnswer();\n        });\n        i0.ɵɵtext(10, \"Add Answer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 5);\n        i0.ɵɵtemplate(12, QuestionFormComponent_div_12_Template, 8, 3, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function QuestionFormComponent_Template_button_click_13_listener() {\n          return ctx.addQuestion();\n        });\n        i0.ɵɵtext(14, \"Create\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.questionForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControlName\", \"label\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.answers.controls);\n      }\n    },\n    dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n    styles: [\".card[_ngcontent-%COMP%]{background:white;border-radius:2px;display:inline-block;margin:1rem;position:relative;box-shadow:0 6px 10px #00000014,0 0 6px #0000000d;padding:0 1em 1em}.button-card[_ngcontent-%COMP%]{background-color:#fff;border:solid 1px #3f51b5;color:#3f51b5;font-weight:700;padding:.5em 1em}.button-card[_ngcontent-%COMP%]:hover{cursor:pointer}.answer-form[_ngcontent-%COMP%]{margin-top:.3em;margin-bottom:.3em}\"]\n  });\n  return QuestionFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}