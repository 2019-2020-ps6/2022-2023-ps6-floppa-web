{"ast":null,"code":"import { BehaviorSubject, Subject } from 'rxjs';\nimport { serverUrl, httpOptionsBase } from '../configs/server.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      /*\r\n       The list of user.\r\n       */\n      this.users = [];\n      /*\r\n       Observable which contains the list of the user.\r\n       */\n      this.users$ = new BehaviorSubject([]);\n      this.userSelected$ = new Subject();\n      this.userUrl = serverUrl + '/users';\n      this.httpOptions = httpOptionsBase;\n      this.retrieveUsers();\n    }\n    retrieveUsers() {\n      this.http.get(this.userUrl).subscribe(userList => {\n        this.users = userList;\n        this.users$.next(this.users);\n      });\n    }\n    addUser(user) {\n      this.http.post(this.userUrl, user, this.httpOptions).subscribe(() => this.retrieveUsers());\n    }\n    setSelectedUser(userId) {\n      const urlWithId = this.userUrl + '/' + userId;\n      this.http.get(urlWithId).subscribe(user => {\n        this.userSelected$.next(user);\n      });\n    }\n    deleteUser(user) {\n      const urlWithId = this.userUrl + '/' + user.id;\n      this.http.delete(urlWithId, this.httpOptions).subscribe(() => this.retrieveUsers());\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}